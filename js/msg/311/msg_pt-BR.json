{

	"btprevious" : "Anterior",
	"btnext" : "Próximo",

	"PiL1" : "JAX-RS: Java™ API para RESTful",
	"PiL2" : "Web Services",
	"PiL3" : "Versão 1.0",
	"PiL4" : "8 de Setembro de 2008",
	"PiL5" : "Editores:",
	"PiL6" : "Marc Hadley",
	"PiL7" : "Paul Sandoz",
	"PiL8" : "Comentários para: users@jsr311.dev.java.net",
	"PiL9" : "Sun Microsystems, Inc.",
	"PiL10" : "4150 Network Circle, Santa Clara, CA 95054 USA.",
	"PiL11" : "180, Avenue de L’Europe, 38330 Montbonnot Saint Martin, France",

	"PiiiL1" : "Especificação: JSR-000311 - Java™ API for RESTful Web Services (“Specification”)",
	"PiiiL2" : "Versão: 1.0",
	"PiiiL3" : "Status: Final Release",
	"PiiiL4" : "Release: September 8, 2008",
	"PiiiL5" : "Copyright 2007 Sun Microsystems, Inc.",
	"PiiiL6" : "4150 Network Circle, Santa Clara, California 95054, U.S.A",
	"PiiiL7" : "180, Avenue de L’Europe, 38330 Montbonnot Saint Martin, France",
	"PiiiL8" : "All rights reserved.",
	"PiiiL9" : "LIMITED LICENSE GRANTS",
	"PiiiL10" : "License for Evaluation Purposes. Sun hereby grants you a fully-paid, non-exclusive, non-transferable, worldwide, limited license (without the right to sublicense), under Sun’s applicable intellectual property rights to view, download, use and reproduce the Specification only for the purpose of internal evaluation. This includes (i) developing applications intended to run on an implementation of the Specification, provided that such applications do not themselves implement any portion(s) of the Specification, and (ii) discussing the Specification with any third party; and (iii) excerpting brief portions of the Specification in oral or written communications which discuss the Specification provided that such excerpts do not in the aggregate constitute a significant portion of the Specification.",
	"PiiiL11" : "License for the Distribution of Compliant Implementations. Sun also grants you a perpetual, non-exclusive, non-transferable, worldwide, fully paid-up, royalty free, limited license (without the right to sublicense) under any applicable copyrights or, subject to the provisions of subsection 4 below, patent rights it may have covering the Specification to create and/or distribute an Independent Implementation of the Specification that: (a) fully implements the Specification including all its required interfaces and functionality; (b) does not modify, subset, superset or otherwise extend the Licensor Name Space, or include any public or protected packages, classes, Java interfaces, fields or methods within the Licensor Name Space other than those required/authorized by the Specification or Specifications being implemented; and (c) passes the Technology Compatibility Kit (including satisfying the requirements of the applicable TCK Users Guide) for such Specification (“Compliant Implementation”). In addition, the foregoing license is expressly conditioned on your not acting outside its scope. No license is granted hereunder for any other purpose (including, for example, modifying the Specification, other than to the extent of your fair use rights, or distributing the Specification to third parties). Also, no right, title, or interest in or to any trademarks, service marks, or trade names of Sun or Sun’s licensors is granted hereunder. Java, and Java-related logos, marks and names are trademarks or registered trademarks of Sun Microsystems, Inc. in the U.S. and other countries.",
	"PiiiL12" : "Pass-through Conditions. You need not include limitations (a)-(c) from the previous paragraph or any other particular “pass through” requirements in any license You grant concerning the use of your Independent Implementation or products derived from it. However, except with respect to Independent Implementations (and products derived from them) that satisfy limitations (a)-(c) from the previous paragraph, You may neither: (a) grant or otherwise pass through to your licensees any licenses under Sun’s applicable intellectual property rights; nor (b) authorize your licensees to make any claims concerning their implementation’s compliance with the Specification in question.",
	"PiiiL13" : "Reciprocity Concerning Patent Licenses.",
	"PiiiL14" : "With respect to any patent claims covered by the license granted under subparagraph 2 above that would be infringed by all technically feasible implementations of the Specification, such license is conditioned upon your offering on fair, reasonable and non-discriminatory terms, to any party seeking it from You, a perpetual, non-exclusive, non-transferable, worldwide license under Your patent rights which are or would be infringed by all technically feasible implementations of the Specification to develop, distribute and use a Compliant Implementation.",
	"PiiiL15" : "With respect to any patent claims owned by Sun and covered by the license granted under subparagraph 2, whether or not their infringement can be avoided in a technically feasible manner when implementing the Specification, such license shall terminate with respect to such claims if You initiate a claim against Sun that it has, in the course of performing its responsibilities as the Specification Lead, induced any other entity to infringe Your patent rights.",
	"PiiiL16" : "Also with respect to any patent claims owned by Sun and covered by the license granted under subparagraph 2 above, where the infringement of such claims can be avoided in a technically feasible manner when implementing the Specification such license, with respect to such claims, shall terminate if You initiate a claim against Sun that its making, having made, using, offering to sell, selling or importing a Compliant Implementation infringes Your patent rights.",
	"PiiiL17" : "Definitions. For the purposes of this Agreement: “Independent Implementation” shall mean an implementation of the Specification that neither derives from any of Sun’s source code or binary code materials nor, except with an appropriate and separate license from Sun, includes any of Sun’s source code or binary code materials; “Licensor Name Space” shall mean the public class or interface declarations whose names begin with “java”, “javax”, “com.sun” or their equivalents in any subsequent naming convention adopted by Sun through the Java Community Process, or any recognized successors or replacements thereof; and “Technology Compatibility Kit” or “TCK” shall mean the test suite and accompanying TCK User’s Guide provided by Sun which corresponds to the Specification and that was available either (i) from Sun’s 120 days before the first release of Your Independent Implementation that allows its use for commercial purposes, or (ii) more recently than 120 days from such release but against which You elect to test Your implementation of the Specification.",

	"PivL1" : "This Agreement will terminate immediately without notice from Sun if you breach the Agreement or act outside the scope of the licenses granted above.",
	"PivL2" : "TRADEMARKS",
	"PivL3" : "No right, title, or interest in or to any trademarks, service marks, or trade names of Sun or Sun’s licensors is granted hereunder. Sun, Sun Microsystems, the Sun logo, Java, are trademarks or registered trademarks of Sun Microsystems, Inc. in the U.S. and other countries.",
	"PivL4" : "DISCLAIMER OF WARRANTIES",
	"PivL5" : "THE SPECIFICATION IS PROVIDED “AS IS”. SUN MAKES NO REPRESENTATIONS OR WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT (INCLUDING AS A CONSEQUENCE OF ANY PRACTICE OR IMPLEMENTATION OF THE SPECIFICATION), OR THAT THE CONTENTS OF THE SPECIFICATION ARE SUITABLE FOR ANY PURPOSE. This document does not represent any commitment to release or implement any portion of the Specification in any product. In addition, the Specification could include technical inaccuracies or typographical errors.",
	"PivL6" : "LIMITATION OF LIABILITY",
	"PivL7" : "TO THE EXTENT NOT PROHIBITED BY LAW, IN NO EVENT WILL SUN OR ITS LICENSORS BE LIABLE FOR ANY DAMAGES, INCLUDING WITHOUT LIMITATION, LOST REVENUE, PROFITS OR DATA, OR FOR SPECIAL, INDIRECT, CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER CAUSED AND REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF OR RELATED IN ANY WAY TO YOUR HAVING, IMPELEMENTING OR OTHERWISE USING USING THE SPECIFICATION, EVEN IF SUN AND/OR ITS LICENSORS HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.",
	"PivL8" : "You will indemnify, hold harmless, and defend Sun and its licensors from any claims arising or resulting from: (i) your use of the Specification; (ii) the use or distribution of your Java application, applet and/or implementation; and/or (iii) any claims that later versions or releases of any Specification furnished to you are incompatible with the Specification provided to you under this license.",
	"PivL9" : "RESTRICTED RIGHTS LEGEND",
	"PivL10" : "U.S. Government: If this Specification is being acquired by or on behalf of the U.S. Government or by a U.S. Government prime contractor or subcontractor (at any tier), then the Government’s rights in the Software and accompanying documentation shall be only as set forth in this license; this is in accordance with 48 C.F.R. 227.7201 through 227.7202-4 (for Department of Defense (DoD) acquisitions) and with 48 C.F.R. 2.101 and 12.212 (for non-DoD acquisitions).",
	"PivL11" : "REPORT",
	"PivL12" : "If you provide Sun with any comments or suggestions concerning the Specification (“Feedback”), you hereby: (i) agree that such Feedback is provided on a non-proprietary and non-confidential basis, and (ii) grant Sun a perpetual, non-exclusive, worldwide, fully paid-up, irrevocable license, with the right to sublicense through multiple levels of sublicensees, to incorporate, disclose, and use without limitation the Feedback for any purpose.",
	"PivL13" : "GENERAL TERMS",
	"PivL14" : "Any action related to this Agreement will be governed by California law and controlling U.S. federal law. The U.N. Convention for the International Sale of Goods and the choice of law rules of any jurisdiction will not apply.",
	"PivL15" : "The Specification is subject to U.S. export control laws and may be subject to export or import regulations in other countries. Licensee agrees to comply strictly with all such laws and regulations and acknowledges that it has the responsibility to obtain such licenses to export, re-export or import as may be required after delivery to Licensee.",
	"PivL16" : "This Agreement is the parties’ entire agreement relating to its subject matter. It supersedes all prior or contemporaneous oral or written communications, proposals, conditions, representations and warranties and prevails over any conflicting or additional terms of any quote, order, acknowledgment, or other communication between the parties relating to its subject matter during the term of this Agreement. No modification to this Agreement will be binding, unless in writing and signed by an authorized representative of each party.",
	"PivL17" : "Rev. April, 2006",

	"PviiL1" : "Introduction",
	"PviiL2" : "Status",
	"PviiL3" : "Goals",
	"PviiL4" : "Non-Goals",
	"PviiL5" : "Conventions",
	"PviiL6" : "Terminology",
	"PviiL7" : "Expert Group Members",
	"PviiL8" : "Acknowledgements",
	"PviiL9" : "Applications",
	"PviiL10" : "Configuration",
	"PviiL11" : "Validation",
	"PviiL12" : "Publication",
	"PviiL13" : "Java SE",
	"PviiL14" : "Servlet",
	"PviiL15" : "Other Container",
	"PviiL16" : "Resources",
	"PviiL17" : "Resource Classes",
	"PviiL18" : "Lifecycle and Environment",
	"PviiL19" : "Constructors",
	"PviiL20" : "Fields and Bean Properties",
	"PviiL21" : "Resource Methods",
	"PviiL22" : "Visibility",
	"PviiL23" : "Parameters",
	"PviiL24" : "Return Type",
	"PviiL25" : "Exceptions",
	"PviiL26" : "HEAD and OPTIONS",
	"PviiL27" : "URI Templates",
	"PviiL28" : "Sub Resources",
	"PviiL29" : "Declaring Media Type Capabilities",
	"PviiL30" : "Annotation Inheritance",
	"PviiL31" : "Matching Requests to Resource Methods",
	"PviiL32" : "Request Preprocessing",
	"PviiL33" : "Request Matching",
	"PviiL34" : "Converting URI Templates to Regular Expressions",
	"PviiL35" : "Determining the MediaType of Responses",
	"PviiL36" : "Providers",
	"PviiL37" : "Lifecycle and Environment",
	"PviiL38" : "Constructors",
	"PviiL39" : "Entity Providers",
	"PviiL40" : "Message Body Reader",
	"PviiL41" : "Message Body Writer",
	"PviiL42" : "Declaring Media Type Capabilities",
	"PviiL43" : "Standard Entity Providers",
	"PviiL44" : "Transfer Encoding",
	"PviiL45" : "Content Encoding",
	"PviiL46" : "Context Providers",
	"PviiL47" : "Declaring Media Type Capabilities",
	"PviiL48" : "Exception Mapping Providers",
	"PviiL49" : "Context",
	"PviiL50" : "Concurrency",
	"PviiL51" : "Context Types",
	"PviiL52" : "URIs and URI Templates",
	"PviiL53" : "Headers",
	"PviiL54" : "Content Negotiation and Preconditions",
	"PviiL55" : "Security Context",
	"PviiL56" : "Providers",
	"PviiL57" : "Environment",
	"PviiL58" : "Servlet Container",
	"PviiL59" : "Java EE Container (Non-normative)",
	"PviiL60" : "Other",
	"PviiL61" : "Runtime Delegate",
	"PviiL62" : "Configuration",
	"PviiL63" : "Summary of Annotations",
	"PviiL64" : "HTTP Header Support",
	"PviiL65" : "Change Log",
	"PviiL66" : "Changes Since Proposed Final Draft",
	"PviiL67" : "Changes Since Public Review Draft",
	"PviiL68" : "Bibliography",

	"P1L1" : "Chapter 1",
	"P1L2" : "Introduction",
	"P1L3" : "This specification defines a set of Java APIs for the development of Web services built according to the Representational State Transfer[1] (REST) architectural style. Readers are assumed to be familiar with REST; for more information about the REST architectural style and RESTful Web services, see:",
	"P1L4" : "Architectural Styles and the Design of Network-based Software Architectures[1]",
	"P1L5" : "The REST Wiki[2]",
	"P1L6" : "Representational State Transfer on Wikipedia[3]",
	"P1L7" : "1.1 Status",
	"P1L8" : "This is an editors draft; this specification is not yet complete. A list of open issues can be found at: https://jsr311.dev.java.net/servlets/ProjectIssues",
	"P1L9" : "The latest Javadocs can be found online at: https://jsr311.dev.java.net/nonav/javadoc/index.html",
	"P1L10" : "The reference implementation can be obtained from: https://jersey.dev.java.net/",
	"P1L11" : "The expert group seeks feedback from the community on any aspect of this specification, please send comments to: users@jsr311.dev.java.net",
	"P1L18" : "1.2 Goals",
	"P1L19" : "The following are the goals of the API:",
	"P1L20" : "POJO-based The API will provide a set of annotations and associated classes/interfaces that may be used with POJOs in order to expose them as Web resources. The specification will define object lifecycle and scope.",
	"P1L21" : "HTTP-centric The specification will assume HTTP[4] is the underlying network protocol and will provide a clear mapping between HTTP and URI[5] elements and the corresponding API classes and annotations. The API will provide high level support for common HTTP usage patterns and will be sufficiently flexible to support a variety of HTTP applications including WebDAV[6] and the Atom Publishing Protocol[7].",
	"P1L22" : "Format independence The API will be applicable to a wide variety of HTTP entity body content types. It will provide the necessary pluggability to allow additional types to be added by an application in a standard manner",
	"P1L23" : "Container independence Artifacts using the API will be deployable in a variety of Web-tier containers. The specification will define how artifacts are deployed in a Servlet[8] container and as a JAX-WS[9] Provider.",
	"P1L24" : "Inclusion in Java EE The specification will define the environment for a Web resource class hosted in a Java EE container and will specify how to use Java EE features and components within a Web resource class.",
	"P1L25" : "1.3 Non-Goals",
	"P1L26" : "The following are non-goals:",
	"P1L27" : "Support for Java versions prior to J2SE 5.0 The API will make extensive use of annotations and will require J2SE 5.0 or later.",
	"P1L28" : "Description, registration and discovery The specification will neither define nor require any service description, registration or discovery capability.",
	"P1L29" : "Client APIs The specification will not define client-side APIs. Other specifications are expected to provide such functionality.",
	"P1L30" : "HTTP Stack The specification will not define a new HTTP stack. HTTP protocol support is provided by a container that hosts artifacts developed using the API.",
	"P1L31" : "Data model/format classes The API will not define classes that support manipulation of entity body content, rather it will provide pluggability to allow such classes to be used by artifacts developed using the API.",
	"P1L32" : "1.4 Conventions",
	"P1L33" : "The keywords ‘MUST’, ‘MUST NOT’, ‘REQUIRED’, ‘SHALL’, ‘SHALL NOT’, ‘SHOULD’, ‘SHOULD NOT’, ‘RECOMMENDED’, ‘MAY’, and ‘OPTIONAL’ in this document are to be interpreted as described in RFC 2119[10].",
	"P1L34" : "Java code and sample data fragments are formatted as shown in figure 1.1:",
	"P1L35" : "Figure 1.1: Example Java Code",
	"P1L36" : "URIs of the general form ‘http://example.org/...’ and ‘http://example.com/...’ represent application or context-dependent URIs.",
	"P1L37" : "All parts of this specification are normative, with the exception of examples, notes and sections explicitly marked as ‘Non-Normative’. Non-normative notes are formatted as shown below",
	"P1L38" : "Note: This is a note.",
	"P1L39" : "1.5 Terminology",
	"P1L40" : "Resource class A Java class that uses JAX-RS annotations to implement a corresponding Web resource, see chapter 3.",
	"P1L41" : "Root resource class A resource class annotated with @Path. Root resource classes provide the roots of the resource class tree and provide access to sub-resources, see chapter 3.",
	"P1L41" : "Request method designator A runtime annotation annotated with @HttpMethod. Used to identify the HTTP request method to be handled by a resource method",
	"P1L42" : "Resource method A method of a resource class annotated with a request method designator that is used to handle requests on the corresponding resource, see section 3.3.",
	"P1L43" : "Sub-resource locator A method of a resource class that is used to locate sub-resources of the corresponding resource, see section 3.4.1. ",
	"P1L44" : "Sub-resource method A method of a resource class that is used to handle requests on a sub-resource of the corresponding resource, see section 3.4.1. ",
	"P1L45" : "Provider An implementation of a JAX-RS extension interface. Providers extend the capabilities of a JAX-RS runtime and are described in chapter 4.",
	"P1L46" : "1.6 Expert Group Members",
	"P1L47" : "This specification is being developed as part of JSR 311 under the Java Community Process. This specification is the result of the collaborative work of the members of the JSR 311 Expert Group. The following are the present and former expert group members:",
	"P1L48" : "Jan Algermissen (Individual Member)",
	"P1L49" : "Heiko Braun (Red Hat Middleware LLC)",
	"P1L50" : "Bill Burke (Red Hat Middleware LLC)",
	"P1L51" : "Larry Cable (BEA Systems)",
	"P1L52" : "Bill De Hora (Individual Member)",
	"P1L53" : "Roy Fielding (Day Software, Inc.)",
	"P1L54" : "Harpreet Geekee (Nortel)",
	"P1L55" : "Nickolas Grabovas (Individual Member)",
	"P1L56" : "Mark Hansen (Individual Member)",
	"P1L57" : "John Harby (Individual Member)",
	"P1L58" : "Hao He (Individual Member)",
	"P1L59" : "Ryan Heaton (Individual Member)",
	"P1L60" : "David Hensley (Individual Member)",
	"P1L61" : "Stephan Koops (Individual Member)",
	"P1L62" : "Changshin Lee (NCsoft Corporation)",
	"P1L63" : "Francois Leygues (Alcatel-Lucent)",
	"P1L64" : "Jerome Louvel (Individual Member)",
	"P1L65" : "Hamid Ben Malek (Fujitsu Limited)",
	"P1L66" : "Ryan J. McDonough (Individual Member)",
	"P1L67" : "Felix Meschberger (Day Software, Inc.)",
	"P1L68" : "David Orchard (BEA Systems)",
	"P1L69" : "Dhanji R. Prasanna (Individual Member)",
	"P1L70" : "Julian Reschke (Individual Member)",
	"P1L71" : "Jan Schulz-Hofen (Individual Member)",
	"P1L72" : "Joel Smith (IBM)",
	"P1L73" : "Stefan Tilkov (innoQ Deutschland GmbH)",
	"P1L74" : "1.7 Acknowledgements",
	"P1L75" : "During the course of the JSR we received many excellent suggestions on the JSR and Jersey (RI) mailing lists, thanks in particular to James Manger (Telstra) and Reto Bachmann-Gmur (Trialox) for their contributions.",
	"P1L76" : "The GenericEntity class was inspired by the Google Guice TypeLiteral class. Our thanks to Bob Lee and Google for donating this class to JAX-RS. ",
	"P1L77" : "The following individuals (all Sun Microsystems) have also made invaluable technical contributions: Roberto Chinnici, Dianne Jiao (TCK), Ron Monzillo, Rajiv Mordani, Eduardo Pelegri-Llopart, Jakub Podlesak (RI) and Bill Shannon.",

	"P2L1" : "Chapter 2",
	"P2L2" : "Applications",
	"P2L3" : "A JAX-RS application consists of one or more resources (see chapter 3) and zero or more providers (see chapter 4). This chapter describes aspects of JAX-RS that apply to an application as a whole, subsequent chapters describe particular aspects of a JAX-RS application and requirements on JAX-RS implementations.",
	"P2L4" : "2.1 Configuration",
	"P2L5" : "The resources and providers that make up a JAX-RS application are configured via an application-supplied subclass of Application. An implementation MAY provide alternate mechanisms for locating resource classes and providers (e.g. runtime class scanning) but use of Application is the only portable means of configuration.",
	"P2L6" : "2.2 Validation",
	"P2L7" : "Specific validation requirements are detailed throughout this specification and the JAX-RS Javadocs. Implementations MAY perform additional validation where feasible and SHOULD report any issues arising from such validation to the user. ",
	"P2L8" : "2.3 Publication",
	"P2L9" : "Applications are published in different ways depending on whether the application is run in a Java SE environment or within a container. This section describes the alternate means of publication.",
	"P2L10" : "2.3.1 Java SE",
	"P2L11" : "In a Java SE environment a configured instance of an endpoint class can be obtained using the create-Endpoint method of RuntimeDelegate. The application supplies an instance of Application and the type of endpoint required. An implementation MAY support zero or more endpoint types of any desired type.",
	"P2L12" : "How the resulting endpoint class instance is used to publish the application is outside the scope of this specification. ",
	"P2L13" : "2.3.1.1 JAX-WS",
	"P2L14" : "An implementation that supports publication via JAX-WS MUST support createEndpoint with an end-point type of javax.xml.ws.Provider. JAX-WS describes how a Provider based endpoint can be published in an SE environment.",
	"P2L15" : "2.3.2 Servlet",
	"P2L16" : "A JAX-RS application is packaged as a Servlet in a .war file. The Application subclass (see section 2.1), resource classes, and providers are packaged in WEB-INF/classes, required libraries are packaged in WEB-INF/lib. Included libraries MAY also contain resource classes and providers as desired. See the Servlet specification for full details on packaging of web applications. ",
	"P2L17" : "When using a JAX-RS aware servlet container, the servlet-class element of the web.xml descriptor SHOULD name the application-supplied subclass of Application.",
	"P2L18" : "When using a non-JAX-RS aware servlet container, the servlet-class element of the web.xml descriptor SHOULD name the JAX-RS implementation-supplied Servlet class. The application-supplied subclass of Application is identified using an init-param with a param-name of javax.ws.rs.Application.",
	"P2L19" : "2.3.3 Other Container",
	"P2L20" : "An implementation MAY provide facilities to host a JAX-RS application in other types of container, such facilities are outside the scope of this specification. "
}
